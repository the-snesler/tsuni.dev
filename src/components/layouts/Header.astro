---
// import NowPlayingIcon from "../components/NowPlayingIcon";
import logo from '@images/reallogo.png';
import { Image } from 'astro:assets';

import Outline from '@/assets/logooutline.svg';
import DarkToggle from '@/components/DarkToggle.astro';
import { Icon } from 'astro-icon/components';

const currentPath = Astro.url.pathname;

const links = [
  { name: 'Home', href: '/', icon: 'lucide:home' },
  { name: 'Guestbook', href: '/#guestbook', icon: 'lucide:book' },
  { name: 'Blog', href: '/posts/', icon: 'lucide:notebook-text' },
  { name: 'Uses', href: '/uses/', icon: 'lucide:gift' }
];
let activeIndex = links.findIndex(link => link.href === currentPath);
---

<header class="fixed top-0 right-0 left-0 z-50 px-3 py-2 text-white">
  <div class="container mx-auto flex flex-row flex-wrap items-center justify-between gap-2 px-4 pt-0 text-black sm:flex-nowrap dark:text-white">
    <div class="h-12 p-0">
      <a href="/" class="group grid h-12 w-max place-items-center leading-none">
        <Outline
          width="200"
          height="50"
          fill="currentColor"
          class="col-end-1 row-end-1 text-white opacity-50 transition-opacity group-hover:opacity-100 dark:text-black"
        />
        <Image src={logo} alt="Tsuni logo" class="z-10 col-end-1 row-end-1" loading="eager" width="200" height="50" quality={50} />
      </a>
    </div>
    <div class="flex-grow"></div>
    <nav>
      <ul
        class="bg-bkg/30 header-link-group inset-shadow-accent/40 flex h-10 flex-row items-stretch justify-around gap-1 rounded-lg p-0.5 inset-shadow-xs sm:gap-2"
      >
        {
          links.map((link, i) => {
            const isActive = activeIndex === i;
            return (
              <li
                class:list={[
                  'header-link group relative rounded-md shadow-none transition-shadow hover:shadow-lg active:shadow-none dark:after:bg-white',
                  { active: isActive },
                  { 'after:hidden': i === links.length - 1 }
                ]}
              >
                <a
                  href={link.href}
                  class:list={[
                    'inset-shadow-accent flex h-full items-center gap-2 rounded-md px-1 inset-shadow-none transition-[translate,background,box-shadow] group-hover:-translate-y-1.5 group-hover:bg-gray-200 group-hover:inset-shadow-xs group-active:translate-y-0 group-active:bg-gray-300 sm:px-2 dark:group-hover:bg-gray-700 dark:group-active:bg-gray-700',
                    { 'bg-gray-200 dark:bg-gray-700': isActive }
                  ]}
                >
                  {link.icon && <Icon name={link.icon} size={24} class="header-icon" />}
                  <span class="hidden sm:inline">{link.name}</span>
                </a>
              </li>
            );
          })
        }
      </ul>
    </nav>
    <DarkToggle />
  </div>
</header>

<style is:global>
  /* Icon */
  li.active .header-icon {
    opacity: 1;
    color: var(--color-content);
  }

  li:not(.active) .header-icon {
    opacity: 0.5;
    color: var(--color-accent);
  }

  .group:hover .header-icon {
    opacity: 1;
    color: var(--color-content);
  }

  /* Divider element */
  .header-link::after {
    pointer-events: none;
    content: '';
    position: absolute;
    top: 50%;
    right: calc(-0.25rem - 1px);
    height: 2rem;
    width: 2px;
    transform: translateY(-50%);
    border-radius: 9999px;
    background: var(--color-bkg);
    opacity: 0.5;
    transition: opacity 0.2s ease-in-out;
  }

  .header-link-group:not(:hover) .active.header-link::after,
  .header-link-group:not(:hover) .header-link:has(+ .active.header-link)::after,
  .header-link-group:hover .header-link:hover::after,
  .header-link-group:hover .header-link:has(+ .header-link:hover)::after {
    opacity: 0;
  }

  /* Hover styles */
  .header-link:hover::before {
    background: var(--color-gray-300);
  }
  .dark .header-link:hover::before {
    background: var(--color-gray-800);
  }
  .header-link::before {
    pointer-events: none;
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: 6px;
    background: transparent;
  }

  /* Hovering the group but not this specific link */
  .header-link-group:hover .header-link:not(:hover) a {
    background: transparent;
    .header-icon {
      color: var(--color-accent);
      opacity: 0.5;
    }
  }
</style>

<script>
  function scrollHeader() {
    const header = document.querySelector('header');
    if (header) {
      if (window.scrollY > 0) {
        header.classList.add('scrolled');
      } else {
        header.classList.remove('scrolled');
      }
    }
  }
  document.addEventListener('scroll', scrollHeader);

  document.addEventListener('load', () => {
    scrollHeader();
  });
</script>

<style>
  header {
    transition: all 0.2s ease-out;

    &.scrolled {
      box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
      background: hsl(var(--color-bkg) / 100);
      backdrop-filter: blur(12px);
    }
  }
</style>
